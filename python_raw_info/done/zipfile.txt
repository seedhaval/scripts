zipfile.CompleteDirs
(file, mode='r', compression=0, allowZip64=True, compresslevel=None, *, strict_timestamps=True)
A ZipFile subclass that ensures that implied directories
are always included in the namelist.
==============================
zipfile.CompleteDirs.close
(self)
Close the file, and for mode 'w', 'x' and 'a' write the ending
records.
==============================
zipfile.CompleteDirs.comment
The comment text associated with the ZIP file.
==============================
zipfile.CompleteDirs.extract
(self, member, path=None, pwd=None)
Extract a member from the archive to the current working directory, using its full name
`member' may be a filename or a ZipInfo object
You can specify a different directory using `path'.
==============================
zipfile.CompleteDirs.extractall
(self, path=None, members=None, pwd=None)
Extract all members from the archive to the current working directory
`path' specifies a different directory to extract to.
`members' is optional and must be a subset of the list returned
by namelist().
==============================
zipfile.CompleteDirs.getinfo
(self, name)
Return the instance of ZipInfo given 'name'.
==============================
zipfile.CompleteDirs.infolist
(self)
Return a list of class ZipInfo instances for files in the archive.
==============================
zipfile.CompleteDirs.make
(source)
Given a source (filename or zipfile), return an appropriate CompleteDirs subclass.
==============================
zipfile.CompleteDirs.namelist
(self)
Return a list of file names in the archive.
==============================
zipfile.CompleteDirs.open
(self, name, mode='r', pwd=None, *, force_zip64=False)
Return file-like object for 'name'.
name is a string for the file name within the ZIP file, or a ZipInfo object.
mode should be 'r' to read a file already in the ZIP file, or 'w' to write to a file newly added to the archive.
pwd is the password to decrypt files (only used for reading).
==============================
zipfile.CompleteDirs.printdir
(self, file=None)
Print a table of contents for the zip file.
==============================
zipfile.CompleteDirs.read
(self, name, pwd=None)
Return file bytes for name.
==============================
zipfile.CompleteDirs.resolve_dir
(self, name)
If the name represents a directory, return that name as a directory (with the trailing slash).
==============================
zipfile.CompleteDirs.setpassword
(self, pwd)
Set default password for encrypted files.
==============================
zipfile.CompleteDirs.testzip
(self)
Read all the files and check the CRC.
==============================
zipfile.CompleteDirs.write
(self, filename, arcname=None, compress_type=None, compresslevel=None)
Put the bytes from filename into the archive under the name arcname.
==============================
zipfile.CompleteDirs.writestr
(self, zinfo_or_arcname, data, compress_type=None, compresslevel=None)
Write a file into the archive The contents is 'data', which may be either a 'str' or a 'bytes' instance
'zinfo_or_arcname' is either a ZipInfo instance or the name of the file in the archive.
==============================
zipfile.Path
(root, at='')
A pathlib-compatible interface for zip files.
Path accepts the zipfile object itself or a filename
==============================
zipfile.Path.is_dir
(self)
==============================
zipfile.Path.is_file
(self)
==============================
zipfile.Path.iterdir
(self)
==============================
zipfile.Path.joinpath
(self, add)
==============================
zipfile.Path.name
==============================
zipfile.Path.open
==============================
zipfile.Path.parent
==============================
zipfile.Path.read_bytes
(self)
==============================
zipfile.Path.read_text
(self, *args, **kwargs)
==============================
zipfile.ZipInfo
(filename='NoName', date_time=(1980, 1, 1, 0, 0, 0))
Class with attributes describing each file in the ZIP archive.
==============================
zipfile.ZipInfo.CRC
==============================
zipfile.ZipInfo.comment
==============================
zipfile.ZipInfo.compress_size
==============================
zipfile.ZipInfo.compress_type
==============================
zipfile.ZipInfo.create_system
==============================
zipfile.ZipInfo.create_version
==============================
zipfile.ZipInfo.date_time
==============================
zipfile.ZipInfo.external_attr
==============================
zipfile.ZipInfo.extra
==============================
zipfile.ZipInfo.extract_version
==============================
zipfile.ZipInfo.file_size
==============================
zipfile.ZipInfo.filename
==============================
zipfile.ZipInfo.flag_bits
==============================
zipfile.ZipInfo.from_file
(filename, arcname=None, *, strict_timestamps=True)
Construct an appropriate ZipInfo for a file on the filesystem.
filename should be the path to a file or directory on the filesystem.
arcname is the name which it will have within the archive (by default, this will be the same as filename, but without a drive letter and with leading path separators removed).
==============================
zipfile.ZipInfo.is_dir
(self)
Return True if this archive member is a directory.
==============================
zipfile.ZipInfo.orig_filename
==============================
zipfile.binascii
Conversion between binary data and ASCII
==============================
zipfile.is_zipfile
(filename)
Quickly see if a file is a ZIP file by checking the magic number.
The filename argument may be a file or file-like object too.
