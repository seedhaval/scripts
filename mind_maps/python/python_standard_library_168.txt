python standard library
    collections
        collections.defaultdict.items
            D.items() -> a set-like object providing a view on D's items
        collections.defaultdict.keys
            D.keys() -> a set-like object providing a view on D's keys
        collections.defaultdict.pop
            D.pop(k[,d]) -> v, remove specified key and return the corresponding value.
            If key is not found, d is returned if given, otherwise KeyError is raised
        collections.defaultdict.popitem
            (self, /)
            Remove and return a (key, value) pair as a 2-tuple.
            Pairs are returned in LIFO (last-in, first-out) order.
            Raises KeyError if the dict is empty.
        collections.defaultdict.setdefault
            (self, key, default=None, /)
            Insert key with a value of default if key is not in the dictionary.
            Return the value for key if key is in the dictionary, else default.
        collections.defaultdict.update
            D.update([E, ]**F) -> None
            Update D from dict/iterable E and F.
            If E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]
            If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v
            In either case, this is followed by: for k in F:  D[k] = F[k]