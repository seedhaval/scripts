python standard library
    configparser
        configparser.SafeConfigParser.setdefault
            (self, key, default=None)
            D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
        configparser.SafeConfigParser.update
            (self, other=(), /, **kwds)
            D.update([E, ]**F) -> None
            Update D from mapping/iterable E and F.
            If E present and has a .keys() method, does:     for k in E: D[k] = E[k]
            If E present and lacks .keys() method, does:     for (k, v) in E: D[k] = v
            In either case, this is followed by: for k, v in F.items(): D[k] = v
        configparser.SafeConfigParser.values
            (self)
            D.values() -> an object providing a view on D's values
        configparser.SafeConfigParser.write
            (self, fp, space_around_delimiters=True)
            Write an .ini-format representation of the configuration state.
            If `space_around_delimiters' is True (the default), delimiters between keys and values are surrounded by spaces.