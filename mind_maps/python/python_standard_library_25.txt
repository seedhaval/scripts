python standard library
    os
        os.DirEntry.is_file
            (self, /, *, follow_symlinks=True)
            Return True if the entry is a file; cached per entry.
        os.DirEntry.is_symlink
            (self, /)
            Return True if the entry is a symbolic link; cached per entry.
        os.DirEntry.name
            the entry's base filename, relative to scandir() "path" argument
        os.DirEntry.path
            the entry's full path name; equivalent to os.path.join(scandir_path, entry.name)
        os.DirEntry.stat
            (self, /, *, follow_symlinks=True)
            Return stat_result object for the entry; cached per entry.
        os.abort
            ()
            This function never returns.
        os.access
            (path, mode, *, dir_fd=None, effective_ids=False, follow_symlinks=True)
            Use the real uid/gid to test for access to a path.
            path Path to be tested; can be string, bytes, or a path-like object.
            mode Operating-system mode bitfield
            Can be F_OK to test existence, or the inclusive-OR of R_OK, W_OK, and X_OK.
            dir_fd If not None, it should be a file descriptor open to a directory, and path should be relative; path will then be relative to that directory.
            effective_ids
            If True, access will use the effective uid/gid instead of the real uid/gid.