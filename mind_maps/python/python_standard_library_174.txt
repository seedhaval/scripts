python standard library
    subprocess
        subprocess.PIPE
            int([x]) -> integer
        subprocess.Popen
            (args, bufsize=-1, executable=None, stdin=None, stdout=None, stderr=None, preexec_fn=None, close_fds=True, shell=False, cwd=None, env=None, universal_newlines=None, startupinfo=None, creationflags=0, restore_signals=True, start_new_session=False, pass_fds=(), *, encoding=None, errors=None, text=None)
            Execute a child program in a new process.
            args: A string, or a sequence of program arguments.
            bufsize: supplied as the buffering argument to the open() function when creating the stdin/stdout/stderr pipe file objects
            executable: A replacement program to execute.
            stdin, stdout and stderr: These specify the executed programs' standard input, standard output and standard error file handles, respectively.
            preexec_fn: (POSIX only) An object to be called in the child process just before the child is executed.
            close_fds: Controls closing or inheriting of file descriptors.
            shell: If true, the command will be executed through the shell.
            cwd: Sets the current directory before the child is executed.
            env: Defines the environment variables for the new process.
            text: If true, decode stdin, stdout and stderr using the given encoding (if set) or the system default otherwise.
            universal_newlines: Alias of text, provided for backwards compatibility.
            startupinfo and creationflags (Windows only)
            restore_signals (POSIX only)
            start_new_session (POSIX only)
            pass_fds (POSIX only)
            encoding and errors: Text mode encoding and error handling to use for file objects stdin, stdout and stderr.