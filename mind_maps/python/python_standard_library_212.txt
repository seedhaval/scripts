python standard library
    configparser
        configparser.ConverterMapping.popitem
            (self)
            D.popitem() -> (k, v), remove and return some (key, value) pair as a 2-tuple; but raise KeyError if D is empty.
        configparser.ConverterMapping.setdefault
            (self, key, default=None)
            D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
        configparser.ConverterMapping.update
            (self, other=(), /, **kwds)
            D.update([E, ]**F) -> None
            Update D from mapping/iterable E and F.
            If E present and has a .keys() method, does:     for k in E: D[k] = E[k]
            If E present and lacks .keys() method, does:     for (k, v) in E: D[k] = v
            In either case, this is followed by: for k, v in F.items(): D[k] = v
        configparser.ConverterMapping.values
            (self)
            D.values() -> an object providing a view on D's values
        configparser.DEFAULTSECT
            str(object='') -> str
            str(bytes_or_buffer[, encoding[, errors]]) -> str
            Create a new string object from the given object
            If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler.
            Otherwise, returns the result of object.__str__() (if defined) or repr(object).
            encoding defaults to sys.getdefaultencoding().
            errors defaults to 'strict'.