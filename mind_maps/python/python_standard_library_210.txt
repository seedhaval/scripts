python standard library
    configparser
        configparser.ConfigParser.update
            (self, other=(), /, **kwds)
            D.update([E, ]**F) -> None
            Update D from mapping/iterable E and F.
            If E present and has a .keys() method, does:     for k in E: D[k] = E[k]
            If E present and lacks .keys() method, does:     for (k, v) in E: D[k] = v
            In either case, this is followed by: for k, v in F.items(): D[k] = v
        configparser.ConfigParser.values
            (self)
            D.values() -> an object providing a view on D's values
        configparser.ConfigParser.write
            (self, fp, space_around_delimiters=True)
            Write an .ini-format representation of the configuration state.
            If `space_around_delimiters' is True (the default), delimiters between keys and values are surrounded by spaces.
        configparser.ConverterMapping
            (parser)
            Enables reuse of get*() methods between the parser and section proxies.
            If a parser class implements a getter directly, the value for the given key will be ``None``
            The presence of the converter name here enables section proxies to find and use the implementation on the parser class.