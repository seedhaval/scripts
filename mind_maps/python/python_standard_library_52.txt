python standard library
    shutil
        shutil.copyfile
            (src, dst, *, follow_symlinks=True)
            Copy data from src to dst in the most efficient way possible.
        shutil.copyfileobj
            (fsrc, fdst, length=0)
            copy data from file-like object fsrc to file-like object fdst
        shutil.copymode
            (src, dst, *, follow_symlinks=True)
            Copy mode bits from src to dst.
            Linux) this method does nothing.
        shutil.copystat
            (src, dst, *, follow_symlinks=True)
            Copy file metadata
            Copy the permission bits, last access time, last modification time, and flags from `src` to `dst`
            The file contents, owner, and group are unaffected
        shutil.copytree
            (src, dst, symlinks=False, ignore=None, copy_function=<function copy2 at 0x7f764669b280>, ignore_dangling_symlinks=False, dirs_exist_ok=False)
            Recursively copy a directory tree and return the destination directory.
            dirs_exist_ok dictates whether to raise an exception in case dst or any missing parent directory already exists.
            The optional ignore argument is a callable If given, it is called with the `src` parameter, which is the directory being visited by copytree(), and `names` which is the list of `src` contents, as returned by os.listdir(): callable(src, names) -> ignored_names
            The optional copy_function argument is a callable that will be used to copy each file It will be called with the source path and the destination path as arguments
            By default, copy2() is used, but any function that supports the same signature (like copy()) can be used.