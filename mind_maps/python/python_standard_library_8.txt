python standard library
    built in functions
        str
            convert to string
        sum
            add all numbers of iterable
            start=0
                first value to be used to start sum
        super( [type[, object-or-type] )
            get proxy object that delegates calls parent or sibling class of type
            accessing inherited methods that are inherited in class
            super().method( arg )
        tuple
            convert iterator to tuple
        type
            return type of object
        zip( *iterables, strict=False )
            zip( [1,2], ['a','b'] ) -> ((1,'a'),(2,'b'))
            strict=False, stop at shortest iterable
            strict=True, error if lengths are not equal
