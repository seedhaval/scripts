python standard library
    itertools
        itertools.permutations
            (iterable, r=None)
            Return successive r-length permutations of elements in the iterable.
            permutations(range(3), 2) --> (0,1), (0,2), (1,0), (1,2), (2,0), (2,1)
        itertools.product
            product(*iterables, repeat=1) --> product object
            Cartesian product of input iterables
            Equivalent to nested for-loops.
            For example, product(A, B) returns the same as:  ((x,y) for x in A for y in B).
            To compute the product of an iterable with itself, specify the number of repetitions with the optional repeat keyword argument
            For example, product(A, repeat=4) means the same as product(A, A, A, A).
            product('ab', range(3)) --> ('a',0) ('a',1) ('a',2) ('b',0) ('b',1) ('b',2)
            product((0,1), (0,1), (0,1)) --> (0,0,0) (0,0,1) (0,1,0) (0,1,1) (1,0,0) ...
        itertools.repeat
            repeat(object [,times]) -> create an iterator which returns the object for the specified number of times
            If not specified, returns the object endlessly.
        itertools.starmap
            (function, iterable, /)
            Return an iterator whose values are returned from the function evaluated with an argument tuple taken from the given sequence.