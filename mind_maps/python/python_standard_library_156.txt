python standard library
    collections
        collections.OrderedDict.move_to_end
            (self, /, key, last=True)
            Move an existing element to the end (or beginning if last is false).
            Raise KeyError if the element does not exist.
        collections.OrderedDict.pop
            od.pop(k[,d]) -> v, remove specified key and return the corresponding value
            If key is not found, d is returned if given, otherwise KeyError is raised.
        collections.OrderedDict.popitem
            (self, /, last=True)
            Remove and return a (key, value) pair from the dictionary.
            Pairs are returned in LIFO order if last is true or FIFO order if false.
        collections.OrderedDict.setdefault
            (self, /, key, default=None)
            Insert key with a value of default if key is not in the dictionary.
            Return the value for key if key is in the dictionary, else default.
        collections.OrderedDict.update
            D.update([E, ]**F) -> None
            Update D from dict/iterable E and F.
            If E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]
            If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v
            In either case, this is followed by: for k in F:  D[k] = F[k]